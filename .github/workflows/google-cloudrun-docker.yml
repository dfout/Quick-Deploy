name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'small-apps-433901'
  REGION: 'us-west1'
  SERVICE: 'quick-deploy'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/250555830433/locations/global/workloadIdentityPools/github/providers/my-repo'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Step 1: Checkout code
      - uses: 'actions/checkout@v4'

      # Step 2: Authenticate to Google Cloud and generate OAuth 2.0 access token
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-action@small-apps-433901.iam.gserviceaccount.com'
          token_format: 'access_token'
          access_token_scopes: 'https://www.googleapis.com/auth/cloud-platform'

      # Step 3: Docker authentication
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'  # Access token generated by auth step
          registry: '${{ env.REGION }}-docker.pkg.dev'

      # Step 4: Build and Push Docker Container
      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="$${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Step 5: Deploy to Cloud Run
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'
          project_id: '${{ env.PROJECT_ID }}'

      # Step 6: Show the deployed service URL
      - name: 'Show output'
        run: |
          echo ${{ steps.deploy.outputs.url }}

